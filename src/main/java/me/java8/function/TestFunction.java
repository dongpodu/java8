package me.java8.function;import java.util.function.Function;/** * function使用场景：传递一个参数，返回一个参数 */public class TestFunction {    public static int compute(int x, Function<Integer, Integer> after,                              Function<Integer, Integer> before) {        return after.compose(before).apply(x);    }    public static int compute1(int x, Function<Integer, Integer> before,                               Function<Integer, Integer> after) {        return before.andThen(after).apply(x);    }    public static void main(String[] args) {        Function<Integer, Integer> f1 = x -> x + 2;        Function<Integer, Integer> f2 = x -> x * 3;        // 先算f2：x*3        // 再将f2传递过来得f1: x*3+2        System.out.println(compute(4, f1, f2));        // 先算f1：x+2        // 再将f1传递过来得f2: (x+2)*3        System.out.println(compute1(4, f1, f2));        // identity代表给什么参数则返回什么参数        Function<Integer, Integer> f3 = Function.identity();        System.out.println(f3.apply(4));    }}